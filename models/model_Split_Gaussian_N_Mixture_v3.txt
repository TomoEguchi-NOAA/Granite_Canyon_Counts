# JAGS model for estimating gray whale abundance off Granite Canyon

# known cyclical nature of gray whale counts is modeled by the split-Gaussian
# function (a piecewise exponential model). I got this idea from ChatGPT.
# 
# Observed counts are assumed to be binomial distribution from this function and
# sighting probability, which is a function of visibility, Beaufort, and observer.
#
# Following Raftery (1988, Infererence for the binomial N parameter: A hierarchical 
# Bayes approach. Biometrika 75:223-228), I use a Poisson distribution as the prior
# for N. 
#
# This v3 version has year spcific Max, K, S1, S2, and P parameters with hyperparameters.
# 
# 2024-07-09: It allows different numbers of sampling periods between primary
# and secondary sampling stations. 
#
# 2025-06-04: Made N[] to be partially observed. N[1,t] = N[max.day,t] = 0 for all t.
# This is the same set up as Durban's approach. This results in an error when compiling.
# "Current value is inconsistent with data" on the final year and last sampling day of data 
# for N. This error does not occur when obs.prob is computed from the mean. When prob is
# directly used in dbin(), the error returns.  

model{

	# --- State model: true abundance ---
	for (y in 1:n.year){
				
		for (t in 2:(n.days-1)){
			
			log_lambda[t, y] <- beta0 - pow(x_day[t,y] - mu, 2) / (2 * pow(step(mu - x_day[t,y]) * sigma1 + (1 - step(mu - x_day[t,y])) * sigma2, 2))
			
			lambda[t, y] <- exp(log_lambda[t, y])
			N[t, y] ~ dpois(lambda[t, y])T(min.N[t,y],)	
			
		}
	}  
 
	beta0 ~ dnorm(0, 1.0)          # Peak log abundance
	mu ~ dunif(0, 1)               # Day of peak (scaled)
	sigma1 ~ dunif(0.01, 1)        # Spread before peak
	sigma2 ~ dunif(0.01, 1)        # Spread after peak
  
	# Set N= 0 when t = 1 or t = max.day
	for (y in 1:n.year){
		N[1, y] <- 0
		N[n.days, y] <- 0
		
		
	}
	
	# observations are from the realized abundance: N-mixture part with 
	# binomial sampling
	
	# force n = 0 for t = 1 and t = max.day
	for (y in 1:n.year){
		for (s in 1:n.station[y]){
			n[1, s, y] ~ dbin(0, 0)
			n[(periods[y,s]+2), s, y] ~ dbin(0,0)
		}
	}
		
	for (y in 1:n.year){
		for (s in 1:n.station[y]){
			for (d in 2:(periods[y,s]+1)){
				# observation per period d								
				
				# Observable N is N * watch.prop
				obs.N[(d-1),s,y] <- N[day[d,s,y], y] * watch.prop[(d-1), s, y]
				n[d, s, y] ~ dbin(prob[(d-1), s, y], round(obs.N[(d-1),s,y]))
				#log.lkhd[(d-1),s,y] <- logdensity.bin(n[d,s,y], prob[(d-1),s,y], round(obs.N[(d-1),s,y]))
								
				#n[d, s, y] ~ dbin(obs.prob[(d-1), s, y], N[day[d,s,y], y])
				#log.lkhd[(d-1),s,y] <- logdensity.bin(n[d,s,y], obs.prob[(d-1),s,y], N[day[d,s,y], y])
				
				# watch.prop is the proportion of the total watch periods in a day (540 minutes) that
				# was actually observed. watch.length is the duration of watch periods in the unit
				# of days. The probability of sighting prob is discounted by the reciprocal of
				# watch.prop. 1/(1 + (1 - watch.prop)) 
				#obs.prob[(d-1),s,y] <- (1/(2 - watch.prop[(d-1),s,y])) * prob[(d-1),s,y]
				
				# mean is station-year specific
				logit(prob[(d-1),s,y]) <- mean.prob[s,y] +
								(BF.Fixed * bf[(d-1),s,y]) +
								(VS.Fixed * vs[(d-1),s,y]) +
								(OBS.RF[obs[(d-1),s,y]]) 	
								#(BF.Fixed * bf[(d-1),s,y]) + 
								#(VS.Fixed * vs[(d-1),s,y])
								#(OBS.RF[obs[(d-1),s,y]]) 	
								#beta.1 * scaled.day[(d-1),s,y] +
			}
		}
	}
	
	#beta.1 ~ dnorm(0, 0.001)
	# priors on mean.prob. I put the lower bound of p to be 0.5. 
	for (y in 1:n.year){
	
		#mean.prob[y] ~ dunif(-5, 5)
		for (s in 1:n.station[y]){
			mean.prob[s,y] ~ dnorm(0, 0.001)T(0,)
		
			#for (d in 1:periods[y,s]){			
			#	e[d,s,y] ~ dnorm(0, 0.01)
			#}
		}
		
	}
	
	# priors for Richards function parameters. 
	for (y in 1:n.year){
		Max[y] ~ dnorm(2000, 1/(800^2))T(0,)
		S1[y] ~ dgamma(S1.alpha, S1.beta)  
		S2[y] ~ dgamma(S2.alpha, S2.beta)  
		K[y] ~ dgamma(K.alpha, K.beta)   
		P[y] ~ dgamma(P.alpha, P.beta) 

	}

	# Uniform distributions were adjusted to capture entire posterior 
	# distributions the hyper-parameters. 
	
	S1.alpha ~ dunif(0.1, 50)
	S1.beta ~ dunif(0.01, 5)
	
	S2.alpha ~ dunif(0.1, 50)
	S2.beta ~ dunif(0.01, 10)
	
	P.alpha ~ dunif(1, 10000)
	P.beta ~ dunif(0.01, 250)
	
	# K.beta <= K.alpha seems to work better with the gamma distribution for K
	# So, I add a random number to K.beta to create K.alpha
	K.beta ~ dunif(0, 5000)
	K.unif ~ dunif(0, 500)
	K.alpha <- K.beta + K.unif
	
	# one mean.prob for the entire time series may not make sense. So, I changed this
	# above - year-station specific. 
	# It doesn't make sense to make it [0,1]...
	# when not using logit for mean.prob, use something like dunif(-2,2)  
	#mean.prob ~ dunif(-5, 5) #dbeta(5, 5) #dbeta(1,1) 
     
	## Observer random effects
	for(o in 1:n.obs){
		OBS.RF[o] ~ dnorm(0,tau.Obs)
	}#o
  
	sigma.Obs ~ dunif(0, 3) #dgamma(1, 0.1)
	tau.Obs <- pow(sigma.Obs,-2)
     
	## Beaufort and visibility	
	BF.Fixed ~ dnorm(0,0.001) 
	VS.Fixed ~ dnorm(0,0.001) 
  
	### Summaries, Abundance Estimates, and Other Derived Quantities 
	for(t in 1:n.year){
		#N is Poisson deviates so they should be integers
		#raw.unrounded[t] <- sum(N[1:n.days,t])
		#Raw.Est[t] <- round(raw.unrounded[t])
		
		Raw.Est[t] <- sum(N[1:n.days, t])
		# multiply raw estimates by correction factor for nighttime passage rates (below)
		Corrected.Est[t] <- Raw.Est[t] * corr.factor 
	}#t
  
	# Correction factor for nighttime passage rates (Perryman et al. 1999 Marine Mammal Science):
	corr.factor ~ dnorm(mean.corr, tau.corr)
	mean.corr <- 1.0875
	sd.corr <- 0.03625
	tau.corr <- pow(sd.corr,-2)
  		
	 
  # In the paper, Perryman et al. stated that "... the multiplicative correction 
  # factor for the entire visual survey based on a 15-h nocturnal (i.e., non-survey)
  # period would be 1 + 0.175f (SE = 0.116 * (14/24)), where f is the fraction of total
  # whales migrating afer 15 January." So, fixing the mean to be 1.0875, it assumes that
  # the median date of migration is Jan 15 (1 + 0.175 * 0.5 = 1.0875). This may have to
  # be fixed to adjust for the changing median migration date. SE of 0.03625 was not found
  # in the paper... 0.116*(14/24) = 0.0677	
  
  # There was a typographic error in Perryman et al. Laake et al. (2012) stated that "... a
  # standard error of f x 15/24 x 0.116 after correcting the typographic errors in Perryman
  # et al. (1999).
}
