# JAGS model for estimating gray whale abundance off Granite Canyon

# known cyclical nature of gray whale counts is modeled by the function
# provided in Girondot et al. (2007): Modeling approaches to quantify
# leatherback nesting trends in French Guiana and Suriname. Chelonian
# Conservation and Biology 6(1): 37-46.
#
# The function has the following form:
# 
# M1 <- (1 + (2 * exp(K) - 1) * exp((1/S1) * (P - d))) ^ (-1/exp(K))
# M2 <- (1 + (2 * exp(K) - 1) * exp((1/S2) * (P - d))) ^ (-1/exp(K))
# N <- min + (max - min) * (M1 * M2)
#
# d is the number of days from the beginning of nesting season
# S1 < 0 and S2 > 0 define the "fatness" of the function
# K > 0 defines the "flatness" at the peak of the function
# P defines where the peak is relatvie to the range of d min(d) < P < max(d)
# min is "the basal level of nesting outside the nesting season"
# max > min
#
# I set min = 0. 
#
# Observed counts are assumed to be binomial distribution from this function and
# sighting probability, which is a function of visibility, Beaufort, and observer.
#
# For the prior for N, I use the Tweedie distribution. V3 used Poisson and
# v4 used gamma. 
#
# Tweedie jags code from https://stackoverflow.com/questions/63473064/how-do-you-code-a-tweedie-distribution-in-jags-bugs
#
# Y ~ Tweedie(mu, phi, p)
# E[Y] = mu, var(Y) = phi * mu^p 

# This version has year spcific K, S1, S2, and P parameters with hyperparameters.
 
# It allows different numbers of sampling periods between primary
# and secondary sampling stations. 2024-07-09

model{

	# Define Richards function - this is the mean of "true" daily abundance
	# The realization is a Tweedie deviate. 
	for (y in 1:n.year){
				
		for (t in 1:n.days){
			# year-specific K - results in conversion issues. 2022-11-09 
			# This was fixed with hyperparameters. 2024
			M1[t, y] <- (1 + (2 * exp(K[y]) - 1) * exp((1/(-S1[y])) * (P[y] - t))) ^ (-1/exp(K[y]))
			M2[t, y] <- (1 + (2 * exp(K[y]) - 1) * exp((1/S2[y]) * (P[y] - t))) ^ (-1/exp(K[y]))
			
			mean.N[t, y] <- (Max[y]) * (M1[t, y] * M2[t, y])
			
			# Tweedie distribution bit starts here.
			lambda[t,y] <- pow(mean.N[t,y], 2-p[y])/(phi[y] * (2-p[y]))
			num[t,y] ~ dpois(lambda[t,y])  
			
			shape[t,y] <- ifelse(mean.N[t,y] == 0, 1, num[t,y] * ((2 - p[y])/(p[y] - 1)))
			rate[t,y] <- ifelse(mean.N[t,y] == 0, exp(-lambda[t,y]), 1/(phi[y] * (p[y]-1) * pow(mean.N[t, y], (p[y]-1))))
			
			# Takes shape/rate parameter 1 if y > 0 and 2 if y = 0
			N[t,y] ~ dgamma(shape[t,y], rate[t,y])
			
			# The original code used y-index to select different shape/rate parameters, which
			# were stored in arrays. I changed them into two separate variables, I use ifelse.
						    			
		}

		# Tweedie parameters.
		#mu[y] ~ dunif(0,100)
		p[y] ~ dunif(1,2)  ## Tweedie power parameter
		phi[y] ~ dunif(0,30) ## Dispersion parameter

	}  

	# observations are from the realized abundance: N-mixture part with 
	# binomial sampling, where the probability is modeled below
	for (y in 1:n.year){
		for (s in 1:n.station[y]){
			for (d in 1:periods[y,s]){
				# observation per period d
				
				n[d, s, y] ~ dbin(obs.prob[d, s, y], round(N[day[d,s,y], y]))
				log.lkhd[d,s,y] <- logdensity.bin(n[d,s,y], obs.prob[d,s,y], round(N[day[d,s,y], y]))
			}
		}
	}

	# priors for Richards function parameters. 
	for (y in 1:n.year){
		Max[y] ~ dgamma(Max.alpha, Max.beta)  
		S1[y] ~ dgamma(S1.alpha, S1.beta)  
		S2[y] ~ dgamma(S2.alpha, S2.beta)  
		K[y] ~ dgamma(K.alpha, K.beta)   
		P[y] ~ dgamma(P.alpha, P.beta) 		
	}

	# Uniform distributions were adjusted after running to capture entire posterior 
	# distributions. 
	Max.alpha ~ dunif(1, 20)
	Max.beta ~ dunif(0, 0.02)  
	
	S1.alpha ~ dunif(0.1, 15)
	S1.beta ~ dunif(0.01, 5)
	
	S2.alpha ~ dunif(0.1, 15)
	S2.beta ~ dunif(0.01, 2.5)
	
	P.alpha ~ dunif(15, 50)
	P.beta ~ dunif(0.01, 1.5)
	
	# K.beta <= K.alpha seems to work better with the gamma distribution for K
	# So, I subtract a random number from K.alpha to create K.beta
	K.alpha ~ dunif(0, 3)
	K.unif ~ dunif(0, 1)
	K.beta <- K.alpha - K.unif
	
	### Observation probability - include the watch period durations (in proportions)
	# I removed all "switches," which were 0/1 to exclude/include each variable. They
	# are all in. If something is not needed, the coefficient would include zero.
	for(y in 1:n.year){
		for(s in 1:n.station[y]){
			for(d in 1:periods[y,s]){

				logit(prob[d,s,y]) <- logit(mean.prob) + 
								(BF.Fixed * bf[d,s,y]) + 
								(VS.Fixed * vs[d,s,y]) +
								(OBS.RF[obs[d,s,y]])						
									
				# watch.prop is the proportion of the total watch periods in a day (540 minutes) that
				# was actually observed. 
				obs.prob[d,s,y] <- watch.prop[d,s,y] * prob[d,s,y]
                
			}#d
		}#s
	}#y
  
	# A wide prior for mean.prob
	# when not using logit for mean.prob, use something like dunif(-2,2)  
	mean.prob ~ dbeta(1,1) 
    
	### Specification of terms within observation probability linear model
  
	## Observer random effect
	for(o in 1:n.obs){
		OBS.RF[o] ~ dnorm(0,tau.Obs)
	}#o
  
	sigma.Obs ~ dgamma(1, 0.1)
	tau.Obs <- pow(sigma.Obs,-2)
     
	## Beaufort 
	#Below is the single fixed effect multiplied by BF rating in the updated obs prob equation:
	BF.Fixed ~ dnorm(0,0.01)
  
	#Below is the single fixed effect multiplied by VS rating in the updated obs prob equation:
	VS.Fixed ~ dnorm(0,0.01)
  
	### Summaries, Abundance Estimates, and Other Derived Quantities 
	for(t in 1:n.year){
	
		raw.unrounded[t] <- sum(N[1:n.days,t])
		Raw.Est[t] <- round(raw.unrounded[t])
	
		# multiply raw estimates by correction factor for nighttime passage rates (below)
		Corrected.Est[t] <- Raw.Est[t] * corr.factor 
	}#t
  
	# Correction factor for nighttime passage rates (Perryman et al. 1999 Marine Mammal Science):
	corr.factor ~ dnorm(mean.corr, tau.corr)
	mean.corr <- 1.0875
	sd.corr <- 0.03625
	tau.corr <- pow(sd.corr,-2)
  		
	 
  # In the paper, Perryman et al. stated that "... the multiplicative correction 
  # factor for the entire visual survey based on a 15-h nocturnal (i.e., non-survey)
  # period would be 1 + 0.175f (SE = 0.116 * (14/24)), where f is the fraction of total
  # whales migrating afer 15 January." So, fixing the mean to be 1.0875, it assumes that
  # the median date of migration is Jan 15 (1 + 0.175 * 0.5 = 1.0875). This may have to
  # be fixed to adjust for the changing median migration date. SE of 0.03625 was not found
  # in the paper... 0.116*(14/24) = 0.0677	
}
