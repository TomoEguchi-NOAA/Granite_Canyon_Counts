
# Uses Spline only. 
model{
      
  
  # count i
  # station (Trailer) s
  # year t
  
  
  ### Linking Lambda from N Mixture to Common Model
  for(t in 1:n.year){
    for(j in 1:(periods[t]+2)){
          
      log(lambda[j,t]) <- log(Watch.Length[j,t]) + sp[day[j,t],t] #specific model daily lambda fit
        
    }#j
  }#t
  
  ### N Mixture process
  
  for(t in 1:n.year){
    for(j in 1:periods[t]){ #NOT periods + 2 because those day 1 & 90 anchor points are fixed, so N shouldn't be estimated for those, only for the days with true watch periods
      for(s in 1:n.station){
      
        n[j,s,t] ~ dbin(obs.prob[j,s,t], N.sp[j,t]) # N mixture model - two observations of 'true' N (passing whales), with different observation probabilities
        
      }#s    
    }#j
  }#t

  for(t in 1:n.year){
    for(j in 1:(periods[t]+2)){ #periods + 2 to include the added anchor points of 0 whales at days 1 and 90

      N.sp[j,t] ~ dpois(lambda.sp[j,t]) # Then, the 'true' N's from a given day are distributed around a poisson mean whales per watch (lambda)

    }#j
  }#t
    
  ### Observation probability
  # It's necessary to have three separate observation probabilities for the three different models (common, spline, and selected)
  # The reason: the common model will force a 'normal' seasonal curve, even if the number of whales in the middle of the season drops substantially
  # If the spline model is then forced to share the same observation probability, it will overestimate the number of whales (because the seasonal curve would lead to a very low sighting probability during those days)
  for(t in 1:n.year){
    for(j in 1:periods[t]){
      for(s in 1:n.station){

        #Final obs prob    = observer 1/0 * (base obs prob + BF on/off *Fixed effect of BF * BF + VS on/off *Fixed effect of VS * VS    + Obs effect on/off * Random effect of observer)

        # Spline (sp) model:
        logit(prob.sp[j,s,t]) <- logit(mean.prob.sp) + (BF.Switch.sp*BF.Fixed.sp*bf[j,t]) + (VS.Switch.sp*VS.Fixed.sp*vs[j,t]) + (OBS.Switch.sp*OBS.RF.sp[obs[j,s,t]])
        obs.prob.sp[j,s,t] <- u[j,s,t]*prob.sp[j,s,t]
        
        
      }#s
    }#j
  }#t
  
  #Uninformative prior for mean.prob
  mean.prob.sp ~ dunif(0,1) 
  
  ### Specification of terms within observation probability linear model
  
  ## Observer random effect
  # SPLINE MODEL

  for(o in 1:n.obs){
    OBS.RF.sp[o] ~ dnorm(0,tau.Obs.sp)
  }#o
  
  #Uninformative prior for tau.Obs
  sigma.Obs.sp ~ dunif(0,2)
  tau.Obs.sp <- pow(sigma.Obs.sp,-2)
  
  OBS.Switch.sp ~ dbern(0.5)
  
  ## Beaufort
  BF.Switch.sp ~ dbern(0.5)
  
  #Below is the single fixed effect multiplied by BF rating in the updated obs prob equation:
  BF.Fixed.sp ~ dnorm(0,0.01)
  
  ## Visibility
  VS.Switch.sp ~ dbern(0.5)
    
  #Below is the single fixed effect multiplied by VS rating in the updated obs prob equation:
  VS.Fixed.sp ~ dnorm(0,0.01)
        
  # mean and sd of the time vector below
  for(t in 1:n.year){
    mean.time.sp[t]<-mean(time.sp[1:90,t])
    sd.time.sp[t]<-sd(time.sp[1:90,t])
  }#t  
  
  for(d in 1:90){ #the full migration is considered to be 90 days starting on Dec 1
    for(t in 1:n.year){
      time.sp[d,t] <- d
      covariate.sp[d,t]<-(time.sp[d,t]-mean.time.sp[t])/sd.time.sp[t] # this makes a 'covariate', which is just a straight line

    }#t

  }#d
  
  for(t in 1:n.year){  
    for(d in 1:90){
      for(k in 1:n.knots){
        Z1[d,k,t]<-pow(uZ1[d,k,t], 1)
        uZ1[d,k,t]<-(covariate.sp[d,t]-knot[k])*step(covariate.sp[d,t]-knot[k])
      }#k
    }#d
  }#t
  
  for(d in 1:90){
    for (l in 1:2){
      for(t in 1:n.year){
		# this makes three vectors related to day 'd' - one a flat line, 
		# one a straight increasing line (a second degree polynomial)
        X.sp[d,l,t] <- pow(covariate.sp[d,t],l-1) 
      }#t
    }#l
  }#d
    
  for(t in 1:n.year){  
    for(k in 1:n.knots){
      b.sp[k,t]~dnorm(0,tau.b.sp[t]) #annual regression coefficients for each spline knot
    }#k
    
    tau.b.sp[t]<-pow(sd.b.sp[t],-2)
    sd.b.sp[t]~dunif(0,10) #uniform prior on regression coefficient SD, as per Durban et al
  
    for(l in 1:2){
      beta.sp[l,t]~dnorm(0,0.01) #N(0,10) prior for S0 and S1 coefficients, as per Durban et al
    }#l

  
    for(d in 1:90){
	  # multiplying splines across days to make the penalized spline model fit

      sp[d,t] <- inprod(beta.sp[,t],X.sp[d,,t]) + inprod(b.sp[,t],Z1[d,,t]) 
    }#d
  }#t
  
  ### Summaries, Abundance Estimates, and Other Derived Quantities
  
  ## Seasonal Abundance Estimate:
  for(t in 1:n.year){
    for(d in 1:90){
      # Daily estimate, the spline model (sp). 
      log(Daily.Est[d,t]) <- sp[d,t] 

    }#d
    raw.unrounded[t] <- sum(Daily.Est[1:90,t])
    Raw.Est[t] <- round(raw.unrounded[t])
    #Raw.Est[t] <- sum(Daily.Est[1:90,t])
    Corrected.Est[t] <- Raw.Est[t]*corr.factor # multiply raw estimates by correction factor for nighttime passage rates (below)
  }#t
  
  # Correction factor for nighttime passage rates:
  corr.factor~dnorm(mean.corr,tau.corr)
  mean.corr<-1.0875
  sd.corr<-0.03625
  tau.corr<-pow(sd.corr,-2)
  
  
  
}#model
    
